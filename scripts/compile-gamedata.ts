import fs from 'fs';
import path from 'path';
import Papa from 'papaparse';

const SOURCE_DIR = './gamedata';
const TYPES_DIR = './src/shared/types';
const DATA_DIR = './src/core/data';

const resourcesCsvPath = path.join(SOURCE_DIR, 'resources.csv');
const resourcesFile = fs.readFileSync(resourcesCsvPath, 'utf8');
const parsedResources = Papa.parse(resourcesFile, { header: true, skipEmptyLines: true }).data;

const allResourceIds: string[] = [];
const resourceDataEntries: string[] = [];
const resourceIconImports: string[] = [];

parsedResources.forEach((res: any) => {
    allResourceIds.push(res.resource_id);
    const iconVarName = `icon_${res.resource_id}`;
    resourceIconImports.push(`import ${iconVarName} from '@/resource-icon/${res.icon}';`);

    resourceDataEntries.push(`${res.resource_id}: {id: '${res.resource_id}',name: '${res.name}',description: \`${res.description}\`,icon: ${iconVarName}}`);
});

const typesFileContent = `
// THIS FILE IS AUTO-GENERATED BY compile-gamedata.ts. DO NOT EDIT.

export const AllResourceIds = [
    ${allResourceIds.map(id => `'${id}'`).join(',\n    ')}
] as const;
export type ResourceId = typeof AllResourceIds[number];
`
const imports = [
    'import type {ResourceData} from "@/shared/types/game.types.ts"',
    'import type {ResourceId} from "@/shared/types/resources.types.ts"',
]

const dataFileContent = `
// THIS FILE IS AUTO-GENERATED BY compile-gamedata.ts. DO NOT EDIT.

${imports.join('\n')}

// Import all icons
${resourceIconImports.join('\n')}

export const RESOURCES: Record<ResourceId, ResourceData> = {
    ${resourceDataEntries.join(',\n    ')}
} as const;
`;


fs.writeFileSync(path.join(TYPES_DIR, 'resources.types.ts'), typesFileContent);
console.log("✅ Wrote resources.types.ts");

fs.writeFileSync(path.join(DATA_DIR, 'resources.data.ts'), dataFileContent);
console.log("✅ Wrote resources.data.ts");
